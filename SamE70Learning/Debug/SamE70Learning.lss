
SamE70Learning.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000430  00400000  00400000  00010000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .relocate     00000430  20400000  00400430  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000001c  20400430  00400860  00020430  2**2
                  ALLOC
  3 .heap         00000204  2040044c  0040087c  00020430  2**0
                  ALLOC
  4 .stack        00000400  20400650  00400a80  00020430  2**0
                  ALLOC
  5 .ARM.attributes 0000002a  00000000  00000000  00020430  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  0002045a  2**0
                  CONTENTS, READONLY
  7 .debug_info   000014fc  00000000  00000000  000204b3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000002df  00000000  00000000  000219af  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000000eb  00000000  00000000  00021c8e  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00000070  00000000  00000000  00021d79  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000040  00000000  00000000  00021de9  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  000327d6  00000000  00000000  00021e29  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   00001810  00000000  00000000  000545ff  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00112365  00000000  00000000  00055e0f  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  00000194  00000000  00000000  00168174  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
  400000:	50 0a 40 20 c5 01 40 00 c1 01 40 00 c1 01 40 00     P.@ ..@...@...@.
  400010:	c1 01 40 00 c1 01 40 00 c1 01 40 00 00 00 00 00     ..@...@...@.....
	...
  40002c:	c1 01 40 00 c1 01 40 00 00 00 00 00 c1 01 40 00     ..@...@.......@.
  40003c:	c1 01 40 00 c1 01 40 00 c1 01 40 00 c1 01 40 00     ..@...@...@...@.
  40004c:	c1 01 40 00 c1 01 40 00 c1 01 40 00 c1 01 40 00     ..@...@...@...@.
  40005c:	c1 01 40 00 c1 01 40 00 00 00 00 00 c1 01 40 00     ..@...@.......@.
  40006c:	c1 01 40 00 c1 01 40 00 c1 01 40 00 c1 01 40 00     ..@...@...@...@.
  40007c:	c1 01 40 00 c1 01 40 00 c1 01 40 00 c1 01 40 00     ..@...@...@...@.
  40008c:	c1 01 40 00 c1 01 40 00 c1 01 40 00 c1 01 40 00     ..@...@...@...@.
  40009c:	c1 01 40 00 c1 01 40 00 c1 01 40 00 c1 01 40 00     ..@...@...@...@.
  4000ac:	c1 01 40 00 c1 01 40 00 c1 01 40 00 c1 01 40 00     ..@...@...@...@.
  4000bc:	c1 01 40 00 c1 01 40 00 c1 01 40 00 c1 01 40 00     ..@...@...@...@.
  4000cc:	c1 01 40 00 c1 01 40 00 c1 01 40 00 c1 01 40 00     ..@...@...@...@.
  4000dc:	c1 01 40 00 c1 01 40 00 c1 01 40 00 c1 01 40 00     ..@...@...@...@.
  4000ec:	c1 01 40 00 c1 01 40 00 c1 01 40 00 c1 01 40 00     ..@...@...@...@.
  4000fc:	c1 01 40 00 c1 01 40 00 c1 01 40 00 c1 01 40 00     ..@...@...@...@.
  40010c:	c1 01 40 00 c1 01 40 00 00 00 00 00 00 00 00 00     ..@...@.........
  40011c:	00 00 00 00 c1 01 40 00 c1 01 40 00 c1 01 40 00     ......@...@...@.
  40012c:	c1 01 40 00 c1 01 40 00 c1 01 40 00 c1 01 40 00     ..@...@...@...@.
  40013c:	c1 01 40 00 c1 01 40 00 c1 01 40 00 c1 01 40 00     ..@...@...@...@.
  40014c:	c1 01 40 00 c1 01 40 00                             ..@...@.

00400154 <__do_global_dtors_aux>:
  400154:	b510      	push	{r4, lr}
  400156:	4c05      	ldr	r4, [pc, #20]	; (40016c <__do_global_dtors_aux+0x18>)
  400158:	7823      	ldrb	r3, [r4, #0]
  40015a:	b933      	cbnz	r3, 40016a <__do_global_dtors_aux+0x16>
  40015c:	4b04      	ldr	r3, [pc, #16]	; (400170 <__do_global_dtors_aux+0x1c>)
  40015e:	b113      	cbz	r3, 400166 <__do_global_dtors_aux+0x12>
  400160:	4804      	ldr	r0, [pc, #16]	; (400174 <__do_global_dtors_aux+0x20>)
  400162:	f3af 8000 	nop.w
  400166:	2301      	movs	r3, #1
  400168:	7023      	strb	r3, [r4, #0]
  40016a:	bd10      	pop	{r4, pc}
  40016c:	20400430 	.word	0x20400430
  400170:	00000000 	.word	0x00000000
  400174:	00400430 	.word	0x00400430

00400178 <frame_dummy>:
  400178:	4b0c      	ldr	r3, [pc, #48]	; (4001ac <frame_dummy+0x34>)
  40017a:	b143      	cbz	r3, 40018e <frame_dummy+0x16>
  40017c:	480c      	ldr	r0, [pc, #48]	; (4001b0 <frame_dummy+0x38>)
  40017e:	490d      	ldr	r1, [pc, #52]	; (4001b4 <frame_dummy+0x3c>)
  400180:	b510      	push	{r4, lr}
  400182:	f3af 8000 	nop.w
  400186:	480c      	ldr	r0, [pc, #48]	; (4001b8 <frame_dummy+0x40>)
  400188:	6803      	ldr	r3, [r0, #0]
  40018a:	b923      	cbnz	r3, 400196 <frame_dummy+0x1e>
  40018c:	bd10      	pop	{r4, pc}
  40018e:	480a      	ldr	r0, [pc, #40]	; (4001b8 <frame_dummy+0x40>)
  400190:	6803      	ldr	r3, [r0, #0]
  400192:	b933      	cbnz	r3, 4001a2 <frame_dummy+0x2a>
  400194:	4770      	bx	lr
  400196:	4b09      	ldr	r3, [pc, #36]	; (4001bc <frame_dummy+0x44>)
  400198:	2b00      	cmp	r3, #0
  40019a:	d0f7      	beq.n	40018c <frame_dummy+0x14>
  40019c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  4001a0:	4718      	bx	r3
  4001a2:	4b06      	ldr	r3, [pc, #24]	; (4001bc <frame_dummy+0x44>)
  4001a4:	2b00      	cmp	r3, #0
  4001a6:	d0f5      	beq.n	400194 <frame_dummy+0x1c>
  4001a8:	4718      	bx	r3
  4001aa:	bf00      	nop
  4001ac:	00000000 	.word	0x00000000
  4001b0:	00400430 	.word	0x00400430
  4001b4:	20400434 	.word	0x20400434
  4001b8:	00400430 	.word	0x00400430
  4001bc:	00000000 	.word	0x00000000

004001c0 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  4001c0:	e7fe      	b.n	4001c0 <Dummy_Handler>
	...

004001c4 <Reset_Handler>:
{
  4001c4:	b508      	push	{r3, lr}
        if (pSrc != pDest) {
  4001c6:	4b17      	ldr	r3, [pc, #92]	; (400224 <Reset_Handler+0x60>)
  4001c8:	4a17      	ldr	r2, [pc, #92]	; (400228 <Reset_Handler+0x64>)
  4001ca:	429a      	cmp	r2, r3
  4001cc:	d010      	beq.n	4001f0 <Reset_Handler+0x2c>
                for (; pDest < &_erelocate;) {
  4001ce:	4b17      	ldr	r3, [pc, #92]	; (40022c <Reset_Handler+0x68>)
  4001d0:	4a14      	ldr	r2, [pc, #80]	; (400224 <Reset_Handler+0x60>)
  4001d2:	429a      	cmp	r2, r3
  4001d4:	d20c      	bcs.n	4001f0 <Reset_Handler+0x2c>
  4001d6:	3b01      	subs	r3, #1
  4001d8:	1a9b      	subs	r3, r3, r2
  4001da:	f023 0303 	bic.w	r3, r3, #3
  4001de:	3304      	adds	r3, #4
  4001e0:	4413      	add	r3, r2
  4001e2:	4911      	ldr	r1, [pc, #68]	; (400228 <Reset_Handler+0x64>)
                        *pDest++ = *pSrc++;
  4001e4:	f851 0b04 	ldr.w	r0, [r1], #4
  4001e8:	f842 0b04 	str.w	r0, [r2], #4
                for (; pDest < &_erelocate;) {
  4001ec:	429a      	cmp	r2, r3
  4001ee:	d1f9      	bne.n	4001e4 <Reset_Handler+0x20>
        for (pDest = &_szero; pDest < &_ezero;) {
  4001f0:	4b0f      	ldr	r3, [pc, #60]	; (400230 <Reset_Handler+0x6c>)
  4001f2:	4a10      	ldr	r2, [pc, #64]	; (400234 <Reset_Handler+0x70>)
  4001f4:	429a      	cmp	r2, r3
  4001f6:	d20a      	bcs.n	40020e <Reset_Handler+0x4a>
  4001f8:	3b01      	subs	r3, #1
  4001fa:	1a9b      	subs	r3, r3, r2
  4001fc:	f023 0303 	bic.w	r3, r3, #3
  400200:	3304      	adds	r3, #4
  400202:	4413      	add	r3, r2
                *pDest++ = 0;
  400204:	2100      	movs	r1, #0
  400206:	f842 1b04 	str.w	r1, [r2], #4
        for (pDest = &_szero; pDest < &_ezero;) {
  40020a:	4293      	cmp	r3, r2
  40020c:	d1fb      	bne.n	400206 <Reset_Handler+0x42>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
  40020e:	4a0a      	ldr	r2, [pc, #40]	; (400238 <Reset_Handler+0x74>)
  400210:	4b0a      	ldr	r3, [pc, #40]	; (40023c <Reset_Handler+0x78>)
  400212:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
  400216:	6093      	str	r3, [r2, #8]
        __libc_init_array();
  400218:	4b09      	ldr	r3, [pc, #36]	; (400240 <Reset_Handler+0x7c>)
  40021a:	4798      	blx	r3
        main();
  40021c:	4b09      	ldr	r3, [pc, #36]	; (400244 <Reset_Handler+0x80>)
  40021e:	4798      	blx	r3
  400220:	e7fe      	b.n	400220 <Reset_Handler+0x5c>
  400222:	bf00      	nop
  400224:	20400000 	.word	0x20400000
  400228:	00400430 	.word	0x00400430
  40022c:	20400430 	.word	0x20400430
  400230:	2040044c 	.word	0x2040044c
  400234:	20400430 	.word	0x20400430
  400238:	e000ed00 	.word	0xe000ed00
  40023c:	00400000 	.word	0x00400000
  400240:	004002c1 	.word	0x004002c1
  400244:	00400259 	.word	0x00400259

00400248 <SystemInit>:
 *         Initialize the System and update the SystemCoreClock variable.
 */
void SystemInit(void)
{
    // Keep the default device state after reset
    SystemCoreClock = __SYSTEM_CLOCK;
  400248:	4a01      	ldr	r2, [pc, #4]	; (400250 <SystemInit+0x8>)
  40024a:	4b02      	ldr	r3, [pc, #8]	; (400254 <SystemInit+0xc>)
  40024c:	601a      	str	r2, [r3, #0]
  40024e:	4770      	bx	lr
  400250:	00b71b00 	.word	0x00b71b00
  400254:	20400000 	.word	0x20400000

00400258 <main>:

#include "sam.h"
#define LEDPIN 8
#define CLOCK_PIN 13
int main(void)
{
  400258:	b508      	push	{r3, lr}
	//Todo: PB13 to peripheral B
	//Todo: find out how to enable PCLK0 output
	//
	//Stop watch dog
	WDT->WDT_MR |= WDT_MR_WDDIS_Msk;
  40025a:	4a14      	ldr	r2, [pc, #80]	; (4002ac <main+0x54>)
  40025c:	6853      	ldr	r3, [r2, #4]
  40025e:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
  400262:	6053      	str	r3, [r2, #4]
    /* Initialize the SAM system */
    SystemInit();
  400264:	4b12      	ldr	r3, [pc, #72]	; (4002b0 <main+0x58>)
  400266:	4798      	blx	r3
	//Set CLOCK_PIN to output based on peripheral
	PIOB->PIO_PDR		= (1 << CLOCK_PIN);
  400268:	4b12      	ldr	r3, [pc, #72]	; (4002b4 <main+0x5c>)
  40026a:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  40026e:	605a      	str	r2, [r3, #4]
	PIOB->PIO_ABCDSR[0]|= (1 << CLOCK_PIN);
  400270:	6f1a      	ldr	r2, [r3, #112]	; 0x70
  400272:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
  400276:	671a      	str	r2, [r3, #112]	; 0x70
	PIOB->PIO_ABCDSR[1]&= ~(1 << CLOCK_PIN);
  400278:	6f5a      	ldr	r2, [r3, #116]	; 0x74
  40027a:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
  40027e:	675a      	str	r2, [r3, #116]	; 0x74
	
    //Set clock source to main
    PMC->PMC_PCK[0] = PMC_PCK_CSS_MAIN_CLK;
  400280:	4a0d      	ldr	r2, [pc, #52]	; (4002b8 <main+0x60>)
  400282:	2301      	movs	r3, #1
  400284:	6413      	str	r3, [r2, #64]	; 0x40
    //Enable the clock
	PMC->PMC_SCER   = PMC_SCSR_PCK0;
  400286:	f44f 7380 	mov.w	r3, #256	; 0x100
  40028a:	6013      	str	r3, [r2, #0]
	
    //Setting up LED pin
	PIOC->PIO_PER = (1 << LEDPIN);
  40028c:	f502 6240 	add.w	r2, r2, #3072	; 0xc00
  400290:	6013      	str	r3, [r2, #0]
	PIOC->PIO_OER = (1 << LEDPIN);
  400292:	6113      	str	r3, [r2, #16]
	
    /* Replace with your application code */
    while (1) {
		PIOC->PIO_SODR = (1 << LEDPIN);
  400294:	4619      	mov	r1, r3
  400296:	4618      	mov	r0, r3
  400298:	6310      	str	r0, [r2, #48]	; 0x30
  40029a:	4b08      	ldr	r3, [pc, #32]	; (4002bc <main+0x64>)
		for(unsigned int i = 0xFFFFF; i> 0; i--);
  40029c:	3b01      	subs	r3, #1
  40029e:	d1fd      	bne.n	40029c <main+0x44>
		PIOC->PIO_CODR =(1 << LEDPIN);
  4002a0:	6351      	str	r1, [r2, #52]	; 0x34
  4002a2:	4b06      	ldr	r3, [pc, #24]	; (4002bc <main+0x64>)
		for(unsigned int i = 0xFFFFF; i> 0; i--);
  4002a4:	3b01      	subs	r3, #1
  4002a6:	d0f7      	beq.n	400298 <main+0x40>
  4002a8:	e7fc      	b.n	4002a4 <main+0x4c>
  4002aa:	bf00      	nop
  4002ac:	400e1850 	.word	0x400e1850
  4002b0:	00400249 	.word	0x00400249
  4002b4:	400e1000 	.word	0x400e1000
  4002b8:	400e0600 	.word	0x400e0600
  4002bc:	000fffff 	.word	0x000fffff

004002c0 <__libc_init_array>:
  4002c0:	b570      	push	{r4, r5, r6, lr}
  4002c2:	4e0f      	ldr	r6, [pc, #60]	; (400300 <__libc_init_array+0x40>)
  4002c4:	4d0f      	ldr	r5, [pc, #60]	; (400304 <__libc_init_array+0x44>)
  4002c6:	1b76      	subs	r6, r6, r5
  4002c8:	10b6      	asrs	r6, r6, #2
  4002ca:	bf18      	it	ne
  4002cc:	2400      	movne	r4, #0
  4002ce:	d005      	beq.n	4002dc <__libc_init_array+0x1c>
  4002d0:	3401      	adds	r4, #1
  4002d2:	f855 3b04 	ldr.w	r3, [r5], #4
  4002d6:	4798      	blx	r3
  4002d8:	42a6      	cmp	r6, r4
  4002da:	d1f9      	bne.n	4002d0 <__libc_init_array+0x10>
  4002dc:	4e0a      	ldr	r6, [pc, #40]	; (400308 <__libc_init_array+0x48>)
  4002de:	4d0b      	ldr	r5, [pc, #44]	; (40030c <__libc_init_array+0x4c>)
  4002e0:	1b76      	subs	r6, r6, r5
  4002e2:	f000 f893 	bl	40040c <_init>
  4002e6:	10b6      	asrs	r6, r6, #2
  4002e8:	bf18      	it	ne
  4002ea:	2400      	movne	r4, #0
  4002ec:	d006      	beq.n	4002fc <__libc_init_array+0x3c>
  4002ee:	3401      	adds	r4, #1
  4002f0:	f855 3b04 	ldr.w	r3, [r5], #4
  4002f4:	4798      	blx	r3
  4002f6:	42a6      	cmp	r6, r4
  4002f8:	d1f9      	bne.n	4002ee <__libc_init_array+0x2e>
  4002fa:	bd70      	pop	{r4, r5, r6, pc}
  4002fc:	bd70      	pop	{r4, r5, r6, pc}
  4002fe:	bf00      	nop
  400300:	00400418 	.word	0x00400418
  400304:	00400418 	.word	0x00400418
  400308:	00400420 	.word	0x00400420
  40030c:	00400418 	.word	0x00400418

00400310 <register_fini>:
  400310:	4b02      	ldr	r3, [pc, #8]	; (40031c <register_fini+0xc>)
  400312:	b113      	cbz	r3, 40031a <register_fini+0xa>
  400314:	4802      	ldr	r0, [pc, #8]	; (400320 <register_fini+0x10>)
  400316:	f000 b805 	b.w	400324 <atexit>
  40031a:	4770      	bx	lr
  40031c:	00000000 	.word	0x00000000
  400320:	00400331 	.word	0x00400331

00400324 <atexit>:
  400324:	2300      	movs	r3, #0
  400326:	4601      	mov	r1, r0
  400328:	461a      	mov	r2, r3
  40032a:	4618      	mov	r0, r3
  40032c:	f000 b81a 	b.w	400364 <__register_exitproc>

00400330 <__libc_fini_array>:
  400330:	b538      	push	{r3, r4, r5, lr}
  400332:	4c0a      	ldr	r4, [pc, #40]	; (40035c <__libc_fini_array+0x2c>)
  400334:	4d0a      	ldr	r5, [pc, #40]	; (400360 <__libc_fini_array+0x30>)
  400336:	1b64      	subs	r4, r4, r5
  400338:	10a4      	asrs	r4, r4, #2
  40033a:	d00a      	beq.n	400352 <__libc_fini_array+0x22>
  40033c:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  400340:	3b01      	subs	r3, #1
  400342:	eb05 0583 	add.w	r5, r5, r3, lsl #2
  400346:	3c01      	subs	r4, #1
  400348:	f855 3904 	ldr.w	r3, [r5], #-4
  40034c:	4798      	blx	r3
  40034e:	2c00      	cmp	r4, #0
  400350:	d1f9      	bne.n	400346 <__libc_fini_array+0x16>
  400352:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  400356:	f000 b863 	b.w	400420 <_fini>
  40035a:	bf00      	nop
  40035c:	00400430 	.word	0x00400430
  400360:	0040042c 	.word	0x0040042c

00400364 <__register_exitproc>:
  400364:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  400368:	4c25      	ldr	r4, [pc, #148]	; (400400 <__register_exitproc+0x9c>)
  40036a:	6825      	ldr	r5, [r4, #0]
  40036c:	f8d5 4148 	ldr.w	r4, [r5, #328]	; 0x148
  400370:	4606      	mov	r6, r0
  400372:	4688      	mov	r8, r1
  400374:	4692      	mov	sl, r2
  400376:	4699      	mov	r9, r3
  400378:	b3c4      	cbz	r4, 4003ec <__register_exitproc+0x88>
  40037a:	6860      	ldr	r0, [r4, #4]
  40037c:	281f      	cmp	r0, #31
  40037e:	dc17      	bgt.n	4003b0 <__register_exitproc+0x4c>
  400380:	1c43      	adds	r3, r0, #1
  400382:	b176      	cbz	r6, 4003a2 <__register_exitproc+0x3e>
  400384:	eb04 0580 	add.w	r5, r4, r0, lsl #2
  400388:	2201      	movs	r2, #1
  40038a:	f8c5 a088 	str.w	sl, [r5, #136]	; 0x88
  40038e:	f8d4 1188 	ldr.w	r1, [r4, #392]	; 0x188
  400392:	4082      	lsls	r2, r0
  400394:	4311      	orrs	r1, r2
  400396:	2e02      	cmp	r6, #2
  400398:	f8c4 1188 	str.w	r1, [r4, #392]	; 0x188
  40039c:	f8c5 9108 	str.w	r9, [r5, #264]	; 0x108
  4003a0:	d01e      	beq.n	4003e0 <__register_exitproc+0x7c>
  4003a2:	3002      	adds	r0, #2
  4003a4:	6063      	str	r3, [r4, #4]
  4003a6:	f844 8020 	str.w	r8, [r4, r0, lsl #2]
  4003aa:	2000      	movs	r0, #0
  4003ac:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4003b0:	4b14      	ldr	r3, [pc, #80]	; (400404 <__register_exitproc+0xa0>)
  4003b2:	b303      	cbz	r3, 4003f6 <__register_exitproc+0x92>
  4003b4:	f44f 70c8 	mov.w	r0, #400	; 0x190
  4003b8:	f3af 8000 	nop.w
  4003bc:	4604      	mov	r4, r0
  4003be:	b1d0      	cbz	r0, 4003f6 <__register_exitproc+0x92>
  4003c0:	f8d5 3148 	ldr.w	r3, [r5, #328]	; 0x148
  4003c4:	2700      	movs	r7, #0
  4003c6:	e880 0088 	stmia.w	r0, {r3, r7}
  4003ca:	f8c5 4148 	str.w	r4, [r5, #328]	; 0x148
  4003ce:	4638      	mov	r0, r7
  4003d0:	2301      	movs	r3, #1
  4003d2:	f8c4 7188 	str.w	r7, [r4, #392]	; 0x188
  4003d6:	f8c4 718c 	str.w	r7, [r4, #396]	; 0x18c
  4003da:	2e00      	cmp	r6, #0
  4003dc:	d0e1      	beq.n	4003a2 <__register_exitproc+0x3e>
  4003de:	e7d1      	b.n	400384 <__register_exitproc+0x20>
  4003e0:	f8d4 118c 	ldr.w	r1, [r4, #396]	; 0x18c
  4003e4:	430a      	orrs	r2, r1
  4003e6:	f8c4 218c 	str.w	r2, [r4, #396]	; 0x18c
  4003ea:	e7da      	b.n	4003a2 <__register_exitproc+0x3e>
  4003ec:	f505 74a6 	add.w	r4, r5, #332	; 0x14c
  4003f0:	f8c5 4148 	str.w	r4, [r5, #328]	; 0x148
  4003f4:	e7c1      	b.n	40037a <__register_exitproc+0x16>
  4003f6:	f04f 30ff 	mov.w	r0, #4294967295
  4003fa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4003fe:	bf00      	nop
  400400:	00400408 	.word	0x00400408
  400404:	00000000 	.word	0x00000000

00400408 <_global_impure_ptr>:
  400408:	20400008                                ..@ 

0040040c <_init>:
  40040c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40040e:	bf00      	nop
  400410:	bcf8      	pop	{r3, r4, r5, r6, r7}
  400412:	bc08      	pop	{r3}
  400414:	469e      	mov	lr, r3
  400416:	4770      	bx	lr

00400418 <__init_array_start>:
  400418:	00400311 	.word	0x00400311

0040041c <__frame_dummy_init_array_entry>:
  40041c:	00400179                                y.@.

00400420 <_fini>:
  400420:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  400422:	bf00      	nop
  400424:	bcf8      	pop	{r3, r4, r5, r6, r7}
  400426:	bc08      	pop	{r3}
  400428:	469e      	mov	lr, r3
  40042a:	4770      	bx	lr

0040042c <__fini_array_start>:
  40042c:	00400155 	.word	0x00400155
